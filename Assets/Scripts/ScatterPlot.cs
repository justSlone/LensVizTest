using UnityEngine;
using System.Collections;
using System;

public class ScatterPlot : MonoBehaviour
{
    public int resolution = 100;
    public ParticleSystem particles;
    public ParticleSystem.Particle[] points;

    // Use this for initialization
    void Start()
    {
        var transform = this.gameObject.transform;
        
        // From iris dataset in R
        // Sepal.Width, Sepal.Length, Petal.Length
        float[,] data = new float[,]
        {
            {0f,0.125f,-0.277777777777778f,-0.432203389830508f},
            {0f,-0.0833333333333334f,-0.333333333333333f,-0.432203389830508f},
            {0f,0f,-0.388888888888889f,-0.449152542372881f},
            {0f,-0.0416666666666667f,-0.416666666666667f,-0.415254237288136f},
            {0f,0.166666666666667f,-0.305555555555556f,-0.432203389830508f},
            {0f,0.291666666666667f,-0.194444444444444f,-0.38135593220339f},
            {0f,0.0833333333333333f,-0.416666666666667f,-0.432203389830508f},
            {0f,0.0833333333333333f,-0.305555555555556f,-0.415254237288136f},
            {0f,-0.125f,-0.472222222222222f,-0.432203389830508f},
            {0f,-0.0416666666666667f,-0.333333333333333f,-0.415254237288136f},
            {0f,0.208333333333333f,-0.194444444444444f,-0.415254237288136f},
            {0f,0.0833333333333333f,-0.361111111111111f,-0.398305084745763f},
            {0f,-0.0833333333333334f,-0.361111111111111f,-0.432203389830508f},
            {0f,-0.0833333333333334f,-0.5f,-0.483050847457627f},
            {0f,0.333333333333333f,-0.0833333333333334f,-0.466101694915254f},
            {0f,0.5f,-0.111111111111111f,-0.415254237288136f},
            {0f,0.291666666666667f,-0.194444444444444f,-0.449152542372881f},
            {0f,0.125f,-0.277777777777778f,-0.432203389830508f},
            {0f,0.25f,-0.111111111111111f,-0.38135593220339f},
            {0f,0.25f,-0.277777777777778f,-0.415254237288136f},
            {0f,0.0833333333333333f,-0.194444444444444f,-0.38135593220339f},
            {0f,0.208333333333333f,-0.277777777777778f,-0.415254237288136f},
            {0f,0.166666666666667f,-0.416666666666667f,-0.5f},
            {0f,0.0416666666666665f,-0.277777777777778f,-0.38135593220339f},
            {0f,0.0833333333333333f,-0.361111111111111f,-0.347457627118644f},
            {0f,-0.0833333333333334f,-0.305555555555556f,-0.398305084745763f},
            {0f,0.0833333333333333f,-0.305555555555556f,-0.398305084745763f},
            {0f,0.125f,-0.25f,-0.415254237288136f},
            {0f,0.0833333333333333f,-0.25f,-0.432203389830508f},
            {0f,0f,-0.388888888888889f,-0.398305084745763f},
            {0f,-0.0416666666666667f,-0.361111111111111f,-0.398305084745763f},
            {0f,0.0833333333333333f,-0.194444444444444f,-0.415254237288136f},
            {0f,0.375f,-0.25f,-0.415254237288136f},
            {0f,0.416666666666667f,-0.166666666666667f,-0.432203389830508f},
            {0f,-0.0416666666666667f,-0.333333333333333f,-0.415254237288136f},
            {0f,0f,-0.305555555555556f,-0.466101694915254f},
            {0f,0.125f,-0.166666666666667f,-0.449152542372881f},
            {0f,0.166666666666667f,-0.333333333333333f,-0.432203389830508f},
            {0f,-0.0833333333333334f,-0.472222222222222f,-0.449152542372881f},
            {0f,0.0833333333333333f,-0.277777777777778f,-0.415254237288136f},
            {0f,0.125f,-0.305555555555556f,-0.449152542372881f},
            {0f,-0.375f,-0.444444444444444f,-0.449152542372881f},
            {0f,0f,-0.472222222222222f,-0.449152542372881f},
            {0f,0.125f,-0.305555555555556f,-0.398305084745763f},
            {0f,0.25f,-0.277777777777778f,-0.347457627118644f},
            {0f,-0.0833333333333334f,-0.361111111111111f,-0.432203389830508f},
            {0f,0.25f,-0.277777777777778f,-0.398305084745763f},
            {0f,0f,-0.416666666666667f,-0.432203389830508f},
            {0f,0.208333333333333f,-0.222222222222222f,-0.415254237288136f},
            {0f,0.0416666666666665f,-0.305555555555556f,-0.432203389830508f},
            {1f,0f,0.25f,0.127118644067797f},
            {1f,0f,0.0833333333333334f,0.0932203389830508f},
            {1f,-0.0416666666666667f,0.222222222222222f,0.161016949152542f},
            {1f,-0.375f,-0.166666666666667f,0.00847457627118642f},
            {1f,-0.166666666666667f,0.111111111111111f,0.110169491525424f},
            {1f,-0.166666666666667f,-0.111111111111111f,0.0932203389830508f},
            {1f,0.0416666666666665f,0.0555555555555555f,0.127118644067797f},
            {1f,-0.333333333333333f,-0.333333333333333f,-0.110169491525424f},
            {1f,-0.125f,0.138888888888889f,0.110169491525424f},
            {1f,-0.208333333333333f,-0.25f,-0.00847457627118647f},
            {1f,-0.5f,-0.305555555555556f,-0.076271186440678f},
            {1f,-0.0833333333333334f,-0.0555555555555555f,0.0423728813559322f},
            {1f,-0.416666666666667f,-0.0277777777777778f,0.00847457627118642f},
            {1f,-0.125f,-1.11022302462516e-16f,0.127118644067797f},
            {1f,-0.125f,-0.138888888888889f,-0.0593220338983051f},
            {1f,-0.0416666666666667f,0.166666666666667f,0.076271186440678f},
            {1f,-0.0833333333333334f,-0.138888888888889f,0.0932203389830508f},
            {1f,-0.208333333333333f,-0.0833333333333334f,0.0254237288135593f},
            {1f,-0.416666666666667f,0.0277777777777778f,0.0932203389830508f},
            {1f,-0.291666666666667f,-0.138888888888889f,-0.00847457627118647f},
            {1f,0f,-0.0555555555555555f,0.144067796610169f},
            {1f,-0.166666666666667f,-1.11022302462516e-16f,0.00847457627118642f},
            {1f,-0.291666666666667f,0.0555555555555555f,0.161016949152542f},
            {1f,-0.166666666666667f,-1.11022302462516e-16f,0.127118644067797f},
            {1f,-0.125f,0.0833333333333334f,0.059322033898305f},
            {1f,-0.0833333333333334f,0.138888888888889f,0.076271186440678f},
            {1f,-0.166666666666667f,0.194444444444444f,0.144067796610169f},
            {1f,-0.0833333333333334f,0.166666666666667f,0.177966101694915f},
            {1f,-0.125f,-0.0277777777777778f,0.0932203389830508f},
            {1f,-0.25f,-0.111111111111111f,-0.076271186440678f},
            {1f,-0.333333333333333f,-0.166666666666667f,-0.0254237288135594f},
            {1f,-0.333333333333333f,-0.166666666666667f,-0.0423728813559322f},
            {1f,-0.208333333333333f,-0.0833333333333334f,-0.00847457627118647f},
            {1f,-0.208333333333333f,-0.0277777777777778f,0.194915254237288f},
            {1f,-0.0833333333333334f,-0.194444444444444f,0.0932203389830508f},
            {1f,0.0833333333333333f,-0.0277777777777778f,0.0932203389830508f},
            {1f,-0.0416666666666667f,0.166666666666667f,0.127118644067797f},
            {1f,-0.375f,0.0555555555555555f,0.076271186440678f},
            {1f,-0.0833333333333334f,-0.138888888888889f,0.0254237288135593f},
            {1f,-0.291666666666667f,-0.166666666666667f,0.00847457627118642f},
            {1f,-0.25f,-0.166666666666667f,0.076271186440678f},
            {1f,-0.0833333333333334f,-1.11022302462516e-16f,0.110169491525424f},
            {1f,-0.25f,-0.0833333333333334f,0.00847457627118642f},
            {1f,-0.375f,-0.305555555555556f,-0.110169491525424f},
            {1f,-0.208333333333333f,-0.138888888888889f,0.0423728813559322f},
            {1f,-0.0833333333333334f,-0.111111111111111f,0.0423728813559322f},
            {1f,-0.125f,-0.111111111111111f,0.0423728813559322f},
            {1f,-0.125f,0.0277777777777778f,0.059322033898305f},
            {1f,-0.291666666666667f,-0.277777777777778f,-0.161016949152542f},
            {1f,-0.166666666666667f,-0.111111111111111f,0.0254237288135593f},
            {2f,0.0416666666666665f,0.0555555555555555f,0.347457627118644f},
            {2f,-0.208333333333333f,-0.0833333333333334f,0.194915254237288f},
            {2f,-0.0833333333333334f,0.277777777777778f,0.330508474576271f},
            {2f,-0.125f,0.0555555555555555f,0.279661016949152f},
            {2f,-0.0833333333333334f,0.111111111111111f,0.313559322033898f},
            {2f,-0.0833333333333334f,0.416666666666667f,0.449152542372881f},
            {2f,-0.291666666666667f,-0.333333333333333f,0.0932203389830508f},
            {2f,-0.125f,0.333333333333333f,0.398305084745763f},
            {2f,-0.291666666666667f,0.166666666666667f,0.313559322033898f},
            {2f,0.166666666666667f,0.305555555555556f,0.364406779661017f},
            {2f,0f,0.111111111111111f,0.194915254237288f},
            {2f,-0.208333333333333f,0.0833333333333334f,0.228813559322034f},
            {2f,-0.0833333333333334f,0.194444444444444f,0.26271186440678f},
            {2f,-0.291666666666667f,-0.111111111111111f,0.177966101694915f},
            {2f,-0.166666666666667f,-0.0833333333333334f,0.194915254237288f},
            {2f,0f,0.0833333333333334f,0.228813559322034f},
            {2f,-0.0833333333333334f,0.111111111111111f,0.26271186440678f},
            {2f,0.25f,0.444444444444444f,0.466101694915254f},
            {2f,-0.25f,0.444444444444444f,0.5f},
            {2f,-0.416666666666667f,-0.0277777777777778f,0.177966101694915f},
            {2f,0f,0.222222222222222f,0.296610169491525f},
            {2f,-0.166666666666667f,-0.138888888888889f,0.161016949152542f},
            {2f,-0.166666666666667f,0.444444444444444f,0.466101694915254f},
            {2f,-0.208333333333333f,0.0555555555555555f,0.161016949152542f},
            {2f,0.0416666666666665f,0.166666666666667f,0.296610169491525f},
            {2f,0f,0.305555555555556f,0.347457627118644f},
            {2f,-0.166666666666667f,0.0277777777777778f,0.144067796610169f},
            {2f,-0.0833333333333334f,-1.11022302462516e-16f,0.161016949152542f},
            {2f,-0.166666666666667f,0.0833333333333334f,0.279661016949152f},
            {2f,-0.0833333333333334f,0.305555555555556f,0.313559322033898f},
            {2f,-0.166666666666667f,0.361111111111111f,0.364406779661017f},
            {2f,0.25f,0.5f,0.415254237288136f},
            {2f,-0.166666666666667f,0.0833333333333334f,0.279661016949152f},
            {2f,-0.166666666666667f,0.0555555555555555f,0.194915254237288f},
            {2f,-0.25f,-1.11022302462516e-16f,0.279661016949152f},
            {2f,-0.0833333333333334f,0.444444444444444f,0.364406779661017f},
            {2f,0.0833333333333333f,0.0555555555555555f,0.279661016949152f},
            {2f,-0.0416666666666667f,0.0833333333333334f,0.26271186440678f},
            {2f,-0.0833333333333334f,-0.0277777777777778f,0.144067796610169f},
            {2f,-0.0416666666666667f,0.222222222222222f,0.245762711864407f},
            {2f,-0.0416666666666667f,0.166666666666667f,0.279661016949152f},
            {2f,-0.0416666666666667f,0.222222222222222f,0.194915254237288f},
            {2f,-0.208333333333333f,-0.0833333333333334f,0.194915254237288f},
            {2f,0f,0.194444444444444f,0.330508474576271f},
            {2f,0.0416666666666665f,0.166666666666667f,0.296610169491525f},
            {2f,-0.0833333333333334f,0.166666666666667f,0.211864406779661f},
            {2f,-0.291666666666667f,0.0555555555555555f,0.177966101694915f},
            {2f,-0.0833333333333334f,0.111111111111111f,0.211864406779661f},
            {2f,0.0833333333333333f,0.0277777777777778f,0.245762711864407f},
            {2f,-0.0833333333333334f,-0.0555555555555555f,0.194915254237288f}
        };

        ParticleSystem particles = this.gameObject.GetComponentInChildren<ParticleSystem>();
        int numPoints = data.GetLength(0);
        points = new ParticleSystem.Particle[numPoints];
        for(int i = 0; i < numPoints; i++)
        {
            points[i].position = new Vector3(data[i,1] + 0.5f, data[i,3] + 0.5f, data[i,2] + 0.5f);
            if (data[i, 0] == 0)
            {
                points[i].color = new Color(255, 0, 0);
            }
            if (data[i, 0] == 1)
            {
                points[i].color = new Color(0, 255, 0);
            }
            if (data[i, 0] == 2)
            {
                points[i].color = new Color(0, 0, 255);
            }

            points[i].size = 0.1f;
        }
        
        particles.SetParticles(points, numPoints);
    }

    // Update is called once per frame
    void Update()
    {
    }
}